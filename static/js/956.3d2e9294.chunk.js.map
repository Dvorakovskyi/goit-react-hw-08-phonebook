{"version":3,"file":"static/js/956.3d2e9294.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem/ContactItem.styled.js","components/ContactList/ContactItem/ContactItem.jsx","components/Notification/Notification.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App.styled.js","pages/HomePage.jsx"],"sourcesContent":["import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#8ec3e0\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 500px;\n`;\n\nexport const StyledLabel = styled.label`\n    margin-bottom: 5px;\n    font-weight: 500;\n    font-size: 16px;\n`;\n\nexport const StyledInput = styled.input`\n    padding: 5px;\n    margin-bottom: 10px;\n    width: 488px;\n    font-size: 14px;\n    border-radius: 4px;\n    border: 2px solid black;\n`;\n\nexport const StyledAddBtn = styled.button`\n    padding: 5px 10px;\n    width: 500px;\n    font-weight: 700;\n    font-size: 16px;\n    background-color: #8ec3e0;\n    cursor: pointer;\n    border: none;\n    border-radius: 4px;\n\n    &:hover,\n    &:focus {\n       background-color: #227ed2; \n    }\n`;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contactsSlice';\nimport { addContact, fetchContacts } from 'redux/thunks';\nimport { Notify } from 'notiflix';\nimport {\n  StyledForm,\n  StyledLabel,\n  StyledInput,\n  StyledAddBtn,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { items } = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    name === 'name' && setName(value);\n    name === 'number' && setNumber(value);\n  };\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n\n    if (checkContact(name)) {\n      Notify.failure(`${name} is already in contacts`);\n\n      return;\n    }\n\n    dispatch(addContact({ name, phone: number }));\n\n    reset();\n  };\n\n  const checkContact = textName => {\n    const normalizedName = textName.toLowerCase().trim();\n\n    const foundName = items.find(\n      ({ name }) => name.toLowerCase().trim() === normalizedName\n    );\n    return Boolean(foundName);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n      <section>\n        <StyledForm onSubmit={handleSubmitForm}>\n          <StyledLabel htmlFor=\"name\">Name</StyledLabel>\n          <StyledInput\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Enter name\"\n          />\n          <StyledLabel htmlFor=\"number\">Number</StyledLabel>\n          <StyledInput\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n            placeholder=\"Enter number\"\n          />\n          <StyledAddBtn type=\"submit\">Add contact</StyledAddBtn>\n        </StyledForm>\n      </section>\n  );\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const StyledItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 10px;\n    width: 500px;\n`;\n\nexport const StyledDeleteBtn = styled.button`\n    padding: 5px 10px;\n    width: 80px;\n    font-weight: 700;\n    font-size: 16px;\n    background-color: #8ec3e0;\n    cursor: pointer;\n    border: none;\n    border-radius: 4px;\n\n    &:hover,\n    &:focus {\n       background-color: #227ed2; \n    }\n`;\n\nexport const StyledContactDescr = styled.p`\n    font-weight: 500;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledItem,\n  StyledDeleteBtn,\n  StyledContactDescr,\n} from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, phone, onClick }) => {\n  return (\n    <StyledItem key={id}>\n      <StyledContactDescr>\n        {name}: {phone}\n      </StyledContactDescr>\n      <StyledDeleteBtn type=\"button\" onClick={onClick}>\n        Delete\n      </StyledDeleteBtn>\n    </StyledItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from \"react\";\n\nconst Notification = () => {\n    return (\n        <p>No contacts yet</p>\n    )\n}\n\nexport default Notification;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contactsSlice';\nimport { deleteContact } from 'redux/thunks';\nimport ContactItem from './ContactItem/ContactItem';\nimport Notification from 'components/Notification/Notification';\nimport Loader from 'components/Loader/Loader';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const { items, isLoading } = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const getContact = () => {\n    const findContact = items.filter(({ name }) => {\n      return name.toLowerCase().trim().includes(filter.toLowerCase().trim());\n    });\n    return findContact;\n  };\n\n  const foundContact = getContact();\n\n  return (\n    <>\n      {isLoading ? <Loader /> :\n        <section>\n          {items.length > 0 ? (\n            <ul>\n              {foundContact.map(({ id, phone, name }) => (\n                <ContactItem\n                  contactsArray={items}\n                  key={id}\n                  name={name}\n                  phone={phone}\n                  onClick={() => dispatch(deleteContact(id))}\n                />\n              ))}\n            </ul>\n          ) : (\n            <Notification />\n          )}\n        </section>}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nexport const StyledFilterSection = styled.section`\n    margin-bottom: 20px;\n`;\n\nexport const StyledLabel = styled.label`\n    margin-right: 10px;\n    margin-bottom: 5px;\n    font-weight: 500;\n    font-size: 16px;\n`;\n\nexport const StyledInput = styled.input`\n    padding: 5px;\n    margin-bottom: 10px;\n    width: 320px;\n    font-size: 14px;\n    border-radius: 4px;\n    border: 2px solid black;\n`;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, setFilter } from 'redux/contactsSlice';\nimport { StyledLabel, StyledInput, StyledFilterSection } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n\n  const handleChangeFilter = event => {\n    const { value } = event.currentTarget;\n\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <StyledFilterSection>\n      <StyledLabel htmlFor=\"search\">Find contacts by name</StyledLabel>\n      <StyledInput\n        id=\"search\"\n        type=\"text\"\n        onChange={handleChangeFilter}\n        value={filter}\n        placeholder=\"Seach name\"\n      />\n    </StyledFilterSection>\n  );\n};\n\nexport default Filter;\n","import styled from \"styled-components\";\n\nexport const StyledWrapper = styled.div`\n    margin-right: auto;\n    margin-left: auto;\n    padding-left: 15px;\n    padding-right: 15px;\n    min-width: 320px;\n    width: 700px;\n`;","import React from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { StyledWrapper } from '../components/App.styled';\n\nconst HomePage = () => {\n    return (\n    <StyledWrapper>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </StyledWrapper>\n  );\n};\n\nexport default HomePage;\n"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","StyledForm","styled","StyledLabel","StyledInput","StyledAddBtn","useState","name","setName","number","setNumber","items","useSelector","getContacts","dispatch","useDispatch","useEffect","fetchContacts","handleChange","event","currentTarget","value","checkContact","textName","normalizedName","toLowerCase","trim","foundName","find","Boolean","reset","onSubmit","preventDefault","Notify","addContact","phone","htmlFor","id","type","pattern","title","required","onChange","placeholder","StyledItem","StyledDeleteBtn","StyledContactDescr","onClick","isLoading","filter","getFilter","foundContact","includes","Loader","length","map","contactsArray","deleteContact","StyledFilterSection","setFilter","StyledWrapper"],"sourceRoot":""}